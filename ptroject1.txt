<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="utf-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1" />
  <title>Lights On/Off</title>
  <style>
    :root{
      --bg-on:#f7fafc;
      --bg-off:#0b1220;
      --bulb-off:#cbd5e1;
      --bulb-on:#ffd84a;
      --base:#475569;
      --accent:#6366f1;
      --text-on:#0f172a;
      --text-off:#e2e8f0;
    }
    *{box-sizing:border-box}
    html,body{height:100%}
    body{
      margin:0; font-family:system-ui,-apple-system,Segoe UI,Roboto,Ubuntu,Arial, sans-serif;
      background:var(--bg-off);
      color:var(--text-off);
      display:grid; place-items:center;
      transition:background .4s ease, color .4s ease;
    }

    .wrap{display:grid; gap:1.25rem; place-items:center; text-align:center}
    .title{font-weight:700; letter-spacing:.3px}
    .hint{opacity:.7; font-size:.9rem}

    /* Bulb */
    .stage{width:min(80vmin,420px); aspect-ratio:1/1; position:relative}
    .bulb{
      --size: 56%;
      position:absolute; inset:0; margin:auto; width:var(--size); aspect-ratio:1/1;
      border-radius:50%;
      background:radial-gradient(circle at 50% 35%, var(--bulb-on) 0 35%, #ffb703 55%, #f59e0b 70%, rgba(0,0,0,.18) 72%), var(--bulb-off);
      box-shadow: 0 12px 40px rgba(0,0,0,.35);
      transition:filter .35s ease, box-shadow .35s ease, transform .2s ease;
      filter:saturate(.2) brightness(.7);
    }
    .bulb::after{ /* socket */
      content:""; position:absolute; left:50%; bottom:-16%; transform:translateX(-50%);
      width:40%; height:18%; border-radius:8px; background:
        linear-gradient(180deg, #cbd5e1, #94a3b8);
      box-shadow: inset 0 0 0 2px #64748b, 0 10px 20px rgba(0,0,0,.25);
    }
    .bulb::before{ /* tiny base ribs */
      content:""; position:absolute; left:50%; bottom:-5%; transform:translateX(-50%);
      width:50%; height:6%; border-radius:6px; background:var(--base);
      filter:brightness(1.1);
    }

    /* Glow when ON */
    .on .bulb{
      filter:saturate(1) brightness(1.05) drop-shadow(0 0 22px rgba(255, 221, 87, .65)) drop-shadow(0 0 90px rgba(255, 201, 53, .45));
      box-shadow: 0 18px 80px rgba(255, 214, 80, .45);
    }

    /* Hanging wire */
    .wire{position:absolute; top:-18%; left:50%; transform:translateX(-50%); width:3px; height:26%; background:linear-gradient(#475569,#0f172a)}

    /* Controls */
    .controls{display:flex; gap:.75rem; flex-wrap:wrap; justify-content:center}
    button{
      border:0; padding:.8rem 1.1rem; border-radius:999px; font-weight:600; cursor:pointer;
      background:#111827; color:#e5e7eb; box-shadow:0 6px 18px rgba(0,0,0,.25);
      transition:transform .12s ease, box-shadow .2s ease, background .2s ease;
    }
    button:hover{transform:translateY(-1px); box-shadow:0 10px 22px rgba(0,0,0,.28)}
    .primary{background:var(--accent)}

    /* Page theme when ON */
    .on body, body.on{ background:var(--bg-on); color:var(--text-on)}

    /* Toggle switch */
    .switch{display:inline-grid; grid-auto-flow:column; gap:.6rem; align-items:center}
    .knob{position:relative; width:54px; height:30px; border-radius:999px; background:#111827; box-shadow:inset 0 0 0 2px rgba(255,255,255,.05)}
    .dot{position:absolute; top:3px; left:3px; width:24px; height:24px; background:#e5e7eb; border-radius:50%; transition:left .22s ease}
    body.on .knob{background:var(--accent)}
    body.on .dot{left:27px}

    /* Small print */
    .kbd{font-family:ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, monospace; padding:.08rem .35rem; border-radius:.35rem; background:rgba(148,163,184,.25)}
    .footer{opacity:.6; font-size:.85rem}
  </style>
</head>
<body>
  <main class="wrap">
    <h1 class="title">Lights <span id="status">Off</span> ðŸ’¡</h1>

    <div class="stage" aria-live="polite" aria-atomic="true">
      <div class="wire" aria-hidden="true"></div>
      <div class="bulb" role="img" aria-label="Light bulb"></div>
    </div>

    <div class="controls" role="group" aria-label="Light controls">
      <button class="primary" id="toggleBtn" aria-pressed="false">Toggle</button>
      <button id="onBtn" aria-label="Turn lights on">On</button>
      <button id="offBtn" aria-label="Turn lights off">Off</button>
      <label class="switch" for="switch">
        <span>Switch</span>
        <span class="knob"><input id="switch" type="checkbox" hidden /><span class="dot"></span></span>
      </label>
    </div>

    <p class="hint">Press <span class="kbd">Space</span> to toggle. State is saved.</p>
    <p class="footer">No images used â€” pure HTML/CSS/JS.</p>
  </main>

  <script>
    const body = document.body;
    const statusEl = document.getElementById('status');
    const toggleBtn = document.getElementById('toggleBtn');
    const onBtn = document.getElementById('onBtn');
    const offBtn = document.getElementById('offBtn');
    const switchInput = document.getElementById('switch');

    function setLight(isOn){
      body.classList.toggle('on', isOn);
      statusEl.textContent = isOn ? 'On' : 'Off';
      toggleBtn.setAttribute('aria-pressed', String(isOn));
      switchInput.checked = isOn;
      localStorage.setItem('light:on', isOn ? '1' : '0');
    }

    function toggle(){ setLight(!body.classList.contains('on')); }

    // Events
    toggleBtn.addEventListener('click', toggle);
    onBtn.addEventListener('click', () => setLight(true));
    offBtn.addEventListener('click', () => setLight(false));
    switchInput.addEventListener('input', e => setLight(e.target.checked));

    // Keyboard: Space toggles
    addEventListener('keydown', (e)=>{
      if(e.code === 'Space'){ e.preventDefault(); toggle(); }
    });

    // Restore saved state
    const saved = localStorage.getItem('light:on');
    setLight(saved === '1');
  </script>
</body>
</html>
